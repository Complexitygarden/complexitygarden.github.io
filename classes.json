{
    "class_list":{
        "ALL": {
            "name": "ALL",
            "latex_name": "\\mathsf{ALL}",
            "top": true,
            "description": "The class of all languages.",
            "information": "ALL is the complexity class of all languages. "
        },
        "NONE": {
            "name": "NONE",
            "latex_name": "\\mathsf{NONE}",
            "bottom": true,
            "description": "The class which does not contain any languages. It is the opposite of ALL.",
            "information": "The 'empty set' of complexity theory, NONE contains no languages but is not equal to the complement of ALL since coALL=ALL."
        },
        "PP": {
            "name": "PP",
            "latex_name": "\\mathsf{PP}",
            "description": "Probabilistic Polynomial Time",
            "information": "The class of decision problems solvable by an NP machine such that <br> <br> <ul> <li> If the answer is yes, then at least half of the computational paths accept </li> <li> If the answer is no, then less than half of the computational paths accept.</li></ul>"
        },
        "QMA": {
            "name": "QMA",
            "latex_name": "\\mathsf{QMA}",
            "description": "Quantum Merlin-Arthur",
            "information": "The class of decision problems such that 'yes' instances can be verified efficiently. That is: <br> <br> <ul> <li>If the answer is 'yes', then there exists a quantum state such that the verifier accepts with probability at least 2/3</li> <li>If the answer is 'no', then for all quantum states the verifier rejects with probability at least 2/3.</li></ul>"
        },
        "QCMA": {
            "name": "QCMA",
            "latex_name": "\\mathsf{QCMA}",
            "description": "Quantum Classical Merlin-Arthur",
            "information": "The class of decision problems for which a 'yes' answer can be efficiently verified by a family of uniform quantum circuits with access to a classical proof. Concretely: <br> <br> <ul> <li>For all 'yes' instances, there exists a poly(|x|) size classical proof such that the verifier accepts with probability at least 2/3</li> <li> For a 'no' instance, for all such classical proofs the verifier rejects with probability at least 2/3.</li></ul>"
        },
        "PDQP": {
            "name": "PDQP",
            "latex_name": "\\mathsf{PDQP}",
            "description": "Polynomial Dynamical Quantum Polynomial Time",
            "information": "Generalization of $\\mathsf{BQP}$ where the machine is allowed to perform measurements without collapsing the wavefunction. Defined in [ABFL16]. <br> $\\mathsf{PDQP}$ may perform unordered search faster than $\\mathsf{BQP}$ and contains $\\mathsf{SZK}$."
        },
        "P": {
            "name": "P",
            "latex_name": "\\mathsf{P}",
            "description": "Polynomial Time",
            "information": "P is the complexity class encompassing decision problems solveable in Polynomial time by a Turing machine. Defined in [Edm65], [Cob64], [Rab60], and other seminal early papers."
        },
        "BQP": {
            "name": "BQP",
            "latex_name": "\\mathsf{BQP}",
            "description": "Bounded-Error Quantum Polynomial Time",
            "information": "test BQP"
        },
        "NP": {
            "name": "NP",
            "latex_name": "\\mathsf{NP}",
            "description": "Non-deterministic Polynomial Time",
            "information": "test NP"
        },
        "SZK": {
            "name": "SZK",
            "latex_name": "\\mathsf{SZK}",
            "description": "Statistical Zero-Knowledge",
            "information": "test SZK"
        },
        "BPP": {
            "name": "BPP",
            "latex_name": "\\mathsf{BPP}",
            "description": "Bounded-Error Probabilistic Polynomial Time",
            "information": "test BPP"
        },
        "PSPACE": {
            "name": "PSPACE",
            "latex_name": "\\mathsf{PSPACE}",
            "description": "Polynomial Space",
            "information": "test PSPACE"
        },
        "EXP": {
            "name": "EXP",
            "latex_name": "\\mathsf{EXP}",
            "description": "Exponential Time",
            "information": "test EXP"
        },
        "DQP":{
            "name": "DQP",
            "latex_name": "\\mathsf{DQP}",
            "description": "Dynamical Quantum Polynomial-Time",
            "information": "text DQP"
        },
        "L": {
            "name": "L",
            "latex_name": "\\mathsf{L}",
            "description": "Logarithmic Space",
            "information":"Class of decision problems solvable by a Turing machine restricted to a memory of logarithmic size in terms of the input size n. Note that the input is not part of the memory."
        },
        "NL":{
            "name": "NL",
            "latex_name": "\\mathsf{NL}",
            "description": "Non-deterministic Logarithmic Space",
            "information": "The Non-deterministic version of L."
        },
        "MA":{
            "name": "MA",
            "latex_name": "\\mathsf{MA}",
            "description": "Merlin-Arthur",
            "information": "Class of decision problems solvable by a Merlin-Arthur protocol. A probabilistic version of NP."
        },
        "AM": {
            "name": "AM",
            "latex_name": "\\mathsf{AM}",
            "description": "Arthur-Merlin",
            "information": "test AM"
        },
        "QMA(2)": {
            "name": "QMA(2)",
            "latex_name": "\\mathsf{QMA(2)}",
            "description": "Quantum Merlin-Arthur with two unentangled certificates.",
            "information": "For k>=2, QMA(2)=QMA(k) where QMA(k) is the class with k unentangled certificates."
        },
        "NEXP":{
            "name": "NEXP",
            "latex_name": "\\mathsf{NEXP}",
            "description": "Non-deterministic Exponential Time",
            "information": "test NEXP"
        },
        "RE":{
            "name": "RE",
            "latex_name": "\\mathsf{RE}",
            "description": "Recursive Enumerable Languages",
            "information": "Class of decision problems for which a 'yes' answer may be verified by a Turing machine in a finite amount of time, while if the answer is 'no' the machine may never halt."
        },
        "A0PP":{
            "name": "A0PP",
            "latex_name": "\\mathsf{A_{0}PP}",
            "description": "One-Sided Analog of AWPP",
            "information": "test A0PP"
        },
        "AWPP":{
            "name": "AWPP",
            "latex_name": "\\mathsf{AWPP}",
            "description": "Almost WPP",
            "information": "test AWPP"
        },
        "R":{
            "name": "R",
            "latex_name": "\\mathsf{R}",
            "description": "Recursive Languages",
            "information": "test R"
        },
        "RP":{
            "name": "RP",
            "latex_name": "\\mathsf{RP}",
            "description": "Randomized Polynomial Time",
            "information": "test RP"
        },
        "ZPP":{
            "name": "ZPP",
            "latex_name": "\\mathsf{ZPP}",
            "description": "Zero-Error Probabilistic Polynomial Time",
            "information": "test ZPP"
        },
        "CH":{
            "name": "CH",
            "latex_name": "\\mathsf{CH}",
            "description": "Counting Hierarchy",
            "information": "test CH"
        },
        "PH":{
            "name": "PH",
            "latex_name": "\\mathsf{PH}",
            "description": "Polynomial Hierarchy",
            "information": "test PH"
        },
        "Sigma2":{
            "name": "Sigma2",
            "latex_name": "\\mathsf{\\Sigma_{2}^{p}}",
            "description": "NP with an NP oracle",
            "information": "Together with \\mathsf{\\Pi_{2}^{p}} comprises the second level of the polynomial hierarchy."
        },
        "Pi2":{
            "name": "Pi2",
            "latex_name": "\\mathsf{\\Pi_{2}^{p}}",
            "description": "co-NP with an NP oracle",
            "information": "Together with \\mathsf{\\Sigma_{2}^{p}} comprises the second level of the polynomial hierarchy."
        },
        "AC0":{
            "name":"AC0",
            "latex_name":"\\mathsf{AC^0}",
            "description":"The class of constant-depth, polynomial-size circuits with unbounded fan-in AND, OR, and NOT gates.",
            "information":"test AC0"
        },
        "TC0":{
            "name":"TC0",
            "latex_name":"\\mathsf{TC^0}",
            "description":"The class of constant-depth, polynomial-size circuits with unbounded fan-in AND, OR, and MAJ (Majority) gates.",
            "information":"test TC0"
        },
        "NC0":{
            "name":"NC0",
            "latex_name":"\\mathsf{NC^0}",
            "description":"The class of constant-depth, polynomial-size circuits with binary AND, OR gates and unary NOT gates.",
            "information":"test NC0"
        },
        "NC1":{
            "name":"NC1",
            "latex_name":"\\mathsf{NC^1}",
            "description":"The class of O(\\log (n)) depth, polynomial-size circuits with binary AND, OR gates and unary NOT gates.",
            "information":"test NC1"
        },
        "AC1":{
            "name":"AC1",
            "latex_name":"\\mathsf{AC^1}",
            "description":"The class of O(\\log (n)) depth, polynomial-size circuits with unbounded fan-in AND, OR, and NOT gates.",
            "information":"test AC1"
        },
        "TC1":{
            "name":"TC1",
            "latex_name":"\\mathsf{TC^1}",
            "description":"The class of O(\\log (n)) depth, polynomial-size circuits with unbounded fan-in AND, OR, and MAJ (Majority) gates..",
            "information":"test TC1"
        },
        "CZK":{
            "name":"CZK",
            "latex_name":"\\mathsf{CZK}",
            "description":"Computational Zero-Knowledge",
            "information":"The class of decision problems solvable by a zero-knowledge proof system where the distributions which the verifier can simulate are computationally indistinguishable from the distributions which the verifier can simulate through interaction with the prover."
        },
        "P/poly":{
            "name":"P/poly",
            "latex_name":"\\mathsf{P/poly}",
            "description":"P with polynomial advice",
            "information":"The class of decision problems solvable by a polynomial-time Turing machine with a polynomial-size advice string. Equals \\mathsf{BPP/poly}."
        },
        "BQP/poly":{
            "name":"BQP/poly",
            "latex_name":"\\mathsf{BQP/poly}",
            "description":"BQP with polynomial advice",
            "information":"The class of decision problems solvable by a $\\mathsf{BQP}$ machine with a polynomial-size advice string with probability at least $2/3$, even if the advice is bad."
        },
        "BQP/qpoly":{
            "name":"BQP/qpoly",
            "latex_name":"\\mathsf{BQP/qpoly}",
            "description":"BQP with polynomial quantum advice",
            "information":"The class of decision problems solvable by a polynomial-time quantum Turing machine with a polynomial-size advice quantum state."
        },
        "QCPH":{
            "name":"QCPH",
            "latex_name":"\\mathsf{QCPH}",
            "description":"Quantum-Classical Polynomial Hierarchy",
            "information":"A generalization of \\mathsf{PH} where the verifier is a classical circuit and the proofs are classical.\n Defined in [GSSSY18]."
        },
        "QPH":{
            "name":"QPH",
            "latex_name":"\\mathsf{QPH}",
            "description":"Quantum Polynomial Hierarchy",
            "information":"A generalization of \\mathsf{PH} where the verifier is a quantum circuit and the proofs are quantum states.\n Defined in [GSSSY18]."
        },
        "IP":{
            "name":"IP",
            "latex_name":"\\mathsf{IP}",
            "description":"Interactive Proof System",
            "information":"test IP"
        },
        "BPPPath":{
            "name":"BPPPath",
            "latex_name":"\\mathsf{BPP_{\\text{path}}}",
            "description":"Threshold BPP",
            "information":"Also known as PostBPP."
        },
        "MIP":{
            "name":"MIP",
            "latex_name":"\\mathsf{MIP}",
            "description":"Multi-Prover Interactive Proof System",
            "information":"test MIP"
        },
        "MIPStar":{
            "name":"MIPStar",
            "latex_name":"\\mathsf{MIP^{*}}",
            "description":"MIP with Quantum Provers",
            "information":"test MIP*"
        },
        "PostBQP":{
            "name":"PostBQP",
            "latex_name":"\\mathsf{PostBQP}",
            "description":"PostBQP",
            "information":"Equal to \\mathsf{PP}."
        },
        "EQP":{
            "name":"EQP",
            "latex_name":"\\mathsf{EQP}",
            "description":"Exact Quantum Polynomial Time",
            "information":"Same as \\mathsf{BQP}, except we output the correct answer with probability 1."
        },
        "LWPP":{
            "name":"LWPP",
            "latex_name":"\\mathsf{LWPP}",
            "description":"Length-Dependent Wide \\mathsf{PP}",
            "information":"test LWPP"
        },
        "CL":{
            "name":"CL",
            "latex_name":"\\mathsf{CL}",
            "description":"Catalytic Logarithmic Space",
            "information":"test CL"
        },
        "QMA1":{
            "name":"QMA1",
            "latex_name":"\\mathsf{QMA_{1}}",
            "description":"One-sided \\mathsf{QMA}",
            "information":"\\mathsf{QMA}, except for a \"yes\" instance, there exists a state which is accepted with probability 1. It has been shown that Quantum k-SAT is \\mathsf{QMA_{1}}\\text{-complete} for k\\geq 3."
        },
        "AH":{
            "name":"AH",
            "latex_name":"\\mathsf{AH}",
            "description":"Arithmetic Hierarchy",
            "information":"Analog of \\mathsf{PH} in computability theory."
        },
        "SBQP":{
            "name":"SBQP",
            "latex_name":"\\mathsf{SBQP}",
            "description":"Small Bounded-Error Quantum Polynomial-Time",
            "information":"test SBQP"
        },
        "SBP":{
            "name":"SBP",
            "latex_name":"\\mathsf{SBP}",
            "description":"Small Bounded-Error Probabilistic Polynomial-Time",
            "information":"test SBP"
        },
        "PP/poly":{
            "name":"PP/poly",
            "latex_name":"\\mathsf{PP/poly}",
            "description":"PP with polynomial advice",
            "information":"test PP/poly"
        },
        "CequalsP":{
            "name":"CequalsP",
            "latex_name":"\\mathsf{C_{=}P}",
            "description":"Exact-Counting Polynomial-Time",
            "information":"The class of decision problems solvable by an $\\mathsf{NP}$ machine such that the number of accepting paths exactly equals the number of rejecting paths, if and only if the answer is 'yes.'"
        },
        "BQP/mpoly":{
            "name":"BQP/mpoly",
            "latex_name":"\\mathsf{BQP/mpoly}",
            "description":"BQP with polynomial merlin-like advice",
            "information":"The class of decision problems solvable by a $\\mathsf{BQP}$ machine with a polynomial-size advice string with probability at least $2/3$ when the advice is good."
        },
        "PsharpP":{
            "name":"PsharpP",
            "latex_name":"\\mathsf{P^{\\#P}}",
            "description":"P with #P oracle",
            "information":"The class of decision problems solvable by a $\\mathsf{P}$ machine with a #P oracle. Equals $\\mathsf{P^{\\mathsf{PP}}}$.<br>Contains $\\mathsf{PH}$ [Tod91]."
        }
    }
}